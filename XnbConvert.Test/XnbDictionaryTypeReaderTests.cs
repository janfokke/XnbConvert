using System.Collections.Generic;
using System.IO;
using NUnit.Framework;

namespace XnbConvert.Test
{
    [TestFixture]
    public class XnbDictionaryTypeReaderTests
    {
        [Test]
        public void TestDeserialize()
        {
            // created with MonoGame pipeline
            // <?xml version="1.0" encoding="utf-8"?>
            // <XnaContent xmlns:ns="Microsoft.Xna.Framework">
            //   <Asset Type="System.Collections.Generic.Dictionary[string,int]">
            //     <Item><Key>testkey1</Key><Value>123</Value></Item>
            //     <Item><Key>testkey2</Key><Value>456</Value></Item>
            //   </Asset>
            // </XnaContent>
            byte[] rawData =
            {
                0x58, 0x4E, 0x42, 0x77, 0x05, 0x00, 0x80, 0x01, 0x00, 0x00, 0x03, 0xEC,
                0x01, 0x4D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74, 0x2E, 0x58,
                0x6E, 0x61, 0x2E, 0x46, 0x72, 0x61, 0x6D, 0x65, 0x77, 0x6F, 0x72, 0x6B,
                0x2E, 0x43, 0x6F, 0x6E, 0x74, 0x65, 0x6E, 0x74, 0x2E, 0x44, 0x69, 0x63,
                0x74, 0x69, 0x6F, 0x6E, 0x61, 0x72, 0x79, 0x52, 0x65, 0x61, 0x64, 0x65,
                0x72, 0x60, 0x32, 0x5B, 0x5B, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E,
                0x53, 0x74, 0x72, 0x69, 0x6E, 0x67, 0x2C, 0x20, 0x6D, 0x73, 0x63, 0x6F,
                0x72, 0x6C, 0x69, 0x62, 0x2C, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F,
                0x6E, 0x3D, 0x34, 0x2E, 0x30, 0x2E, 0x30, 0x2E, 0x30, 0x2C, 0x20, 0x43,
                0x75, 0x6C, 0x74, 0x75, 0x72, 0x65, 0x3D, 0x6E, 0x65, 0x75, 0x74, 0x72,
                0x61, 0x6C, 0x2C, 0x20, 0x50, 0x75, 0x62, 0x6C, 0x69, 0x63, 0x4B, 0x65,
                0x79, 0x54, 0x6F, 0x6B, 0x65, 0x6E, 0x3D, 0x62, 0x37, 0x37, 0x61, 0x35,
                0x63, 0x35, 0x36, 0x31, 0x39, 0x33, 0x34, 0x65, 0x30, 0x38, 0x39, 0x5D,
                0x2C, 0x5B, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6D, 0x2E, 0x49, 0x6E, 0x74,
                0x33, 0x32, 0x2C, 0x20, 0x6D, 0x73, 0x63, 0x6F, 0x72, 0x6C, 0x69, 0x62,
                0x2C, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6F, 0x6E, 0x3D, 0x34, 0x2E,
                0x30, 0x2E, 0x30, 0x2E, 0x30, 0x2C, 0x20, 0x43, 0x75, 0x6C, 0x74, 0x75,
                0x72, 0x65, 0x3D, 0x6E, 0x65, 0x75, 0x74, 0x72, 0x61, 0x6C, 0x2C, 0x20,
                0x50, 0x75, 0x62, 0x6C, 0x69, 0x63, 0x4B, 0x65, 0x79, 0x54, 0x6F, 0x6B,
                0x65, 0x6E, 0x3D, 0x62, 0x37, 0x37, 0x61, 0x35, 0x63, 0x35, 0x36, 0x31,
                0x39, 0x33, 0x34, 0x65, 0x30, 0x38, 0x39, 0x5D, 0x5D, 0x00, 0x00, 0x00,
                0x00, 0x2C, 0x4D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74, 0x2E,
                0x58, 0x6E, 0x61, 0x2E, 0x46, 0x72, 0x61, 0x6D, 0x65, 0x77, 0x6F, 0x72,
                0x6B, 0x2E, 0x43, 0x6F, 0x6E, 0x74, 0x65, 0x6E, 0x74, 0x2E, 0x53, 0x74,
                0x72, 0x69, 0x6E, 0x67, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x00, 0x00,
                0x00, 0x00, 0x2B, 0x4D, 0x69, 0x63, 0x72, 0x6F, 0x73, 0x6F, 0x66, 0x74,
                0x2E, 0x58, 0x6E, 0x61, 0x2E, 0x46, 0x72, 0x61, 0x6D, 0x65, 0x77, 0x6F,
                0x72, 0x6B, 0x2E, 0x43, 0x6F, 0x6E, 0x74, 0x65, 0x6E, 0x74, 0x2E, 0x49,
                0x6E, 0x74, 0x33, 0x32, 0x52, 0x65, 0x61, 0x64, 0x65, 0x72, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x02, 0x08, 0x74, 0x65,
                0x73, 0x74, 0x6B, 0x65, 0x79, 0x31, 0x7B, 0x00, 0x00, 0x00, 0x02, 0x08,
                0x74, 0x65, 0x73, 0x74, 0x6B, 0x65, 0x79, 0x32, 0xC8, 0x01, 0x00, 0x00
            };

            XnbFile<Dictionary<string, int>> val = XnbConvert.Deserialize<Dictionary<string, int>>(rawData);
            Assert.AreEqual(new Dictionary<string, int>
            {
                {"testkey1", 123},
                {"testkey2", 456},
            }, val.Content);
        }

        [Test]
        public void TestSerialize()
        {
            var dictionary = new Dictionary<string, Dictionary<int,int>>
            {
                {"testkey1", new Dictionary<int,int>{
                    {1, 123},
                    {2, 456}
                }},
                {"testkey2", new Dictionary<int,int>{
                    {1, 123},
                    {2, 456}
                }}
            };

            byte[] rawData = XnbConvert.Serialize(dictionary);
            File.WriteAllBytes("output.bin", rawData);
            XnbFile<Dictionary<string, Dictionary<int, int>>> val = XnbConvert.Deserialize<Dictionary<string, Dictionary<int, int>>>(rawData);
            Assert.AreEqual(dictionary, val.Content);
        }
    }
}